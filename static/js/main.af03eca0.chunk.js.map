{"version":3,"sources":["data/requests.js","data/axios.js","components/featured/Featured.js","components/navbar/Navbar.js","components/rowItem/RowItem.js","components/row/Row.js","pages/home/Home.js","App.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Featured","useState","movie","setMovie","useEffect","fetchData","a","get","req","data","results","Math","floor","random","length","str","n","console","log","className","src","backdrop_path","alt","title","name","original_name","overview","substr","PlayArrow","sx","fontSize","InfoOutlined","Navbar","isScrolled","setIsScrolled","window","onscroll","pageYOffset","Search","Notifications","ArrowDropDown","RowItem","isLargeRow","rating","setRating","genres","setGenres","seasons","setSeasons","isMovie","fetchRatings","id","find","obj","iso_3166_1","release_dates","certification","genresArray","forEach","reqGenre","push","number_of_seasons","poster_path","Add","ThumbUpAltOutlined","ThumbDownAltOutlined","KeyboardArrowDown","vote_average","map","genre","Row","fetchURL","movies","setMovies","slideNumber","setSlideNumber","animationFinished","setAnimationFinished","rowRef","useRef","handleClick","direction","distance","current","getBoundingClientRect","x","style","transform","setTimeout","ArrowBackIosOutlined","onClick","display","ref","ArrowForwardIosOutlined","Home","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af03eca0.chunk.js","sourcesContent":["const API_KEY = \"33df560deb68ba199cabea7a3b00b7a5\";\n\nconst requests = {\n\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US&region=US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n\n\n\n}\n\nexport default requests;","import axios from \"axios\";\n\n// Base URL\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\"\n})\n\nexport default instance;","import { useEffect, useState } from 'react'\nimport axios from '../../data/axios'\nimport requests from '../../data/requests'\nimport { InfoOutlined, PlayArrow } from '@mui/icons-material'\n\n\nconst Featured = () => {\n\n    const [movie, setMovie] = useState([])\n\n    useEffect(() => {\n\n        const fetchData = async () => {\n            const req = await axios.get(requests.fetchNetflixOriginals)\n            // console.log(req.data.results[Math.floor(Math.random() * req.data.results.length) - 1])\n\n            // This returns 1 random movie from the array of objects and sets it as the state of movie\n            setMovie(req.data.results[Math.floor(Math.random() * req.data.results.length) - 1])\n            return req\n        }\n\n        fetchData()\n    }, [])\n\n    const truncate = (str, n) => {\n        return str?.length.n ? str.substr(0, n - 1) + \"...\" : str;\n    }\n\n    console.log(movie)\n\n    return (\n\n        <div className=\"featured\">\n\n            <div className=\"featured-fade-bottom\"></div>\n\n            <img\n                className=\"featured-img\"\n                src={`https://image.tmdb.org/t/p/original/${movie?.backdrop_path}`}\n                alt=\"\"\n            />\n\n            <div className=\"featured-info\">\n\n                <h1 className=\"featured-title\">\n                    {/* Set Movie title but account for possible naming inconsistincies in API */}\n                    {movie?.title || movie?.name || movie?.original_name}\n                </h1>\n\n                <h2 className=\"featured-desc\">\n\n                    {truncate(movie?.overview, 100)}\n\n                </h2>\n\n                <div className=\"featured-buttons\">\n\n                    <button className=\"play\">\n\n                        <PlayArrow className=\"icons\" sx={{ fontSize: 40 }} />\n                        <span>Play</span>\n\n                    </button>\n\n                    <button className=\"more-info\">\n\n                        <InfoOutlined className=\"icons\" sx={{ fontSize: 40 }} />\n                        <span>More Info</span>\n\n                    </button>\n\n                </div>\n\n\n            </div>\n\n\n        </div>\n    )\n\n}\n\nexport default Featured\n","import { ArrowDropDown, Notifications, Search } from '@mui/icons-material'\nimport React, { useState } from 'react'\n\nconst Navbar = () => {\n\n    // Check if the page has been scrolled\n    const [isScrolled, setIsScrolled] = useState(false);\n\n    // When page has been scrolled setIsScrolled to true\n    window.onscroll = () => {\n        setIsScrolled(window.pageYOffset === 0 ? false : true)\n        return () => (window.onscroll = null);\n    }\n\n\n    return (\n        // If isScrolled state is true then add scrolled class. If not then just use default navbar class/css\n        <div className={isScrolled ? \"navbar scrolled\" : \"navbar\"}>\n\n            <div className=\"nav-container\">\n\n                <div className=\"nav-left\">\n\n                    <img\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/2560px-Netflix_2015_logo.svg.png\"\n                        alt=\"\"\n                    />\n\n                    <span>Home</span>\n                    <span>TV Shows</span>\n                    <span>Movies</span>\n                    <span>New & Popular</span>\n                    <span>My List</span>\n\n                </div>\n\n                <div className=\"nav-right\">\n\n                    <Search className=\"nav-icon\" />\n\n                    <span>DVD</span>\n\n                    <Notifications className=\"nav-icon\" />\n\n                    <img src=\"https://images.pexels.com/photos/6899260/pexels-photo-6899260.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\" alt=\"\" />\n\n                    <div className=\"profile\">\n\n                        <ArrowDropDown className=\"nav-icon\" />\n                        <div className=\"options\">\n                            <span>Settings</span>\n                            <span>Logout</span>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Navbar\n","import { useEffect, useState } from 'react'\nimport axios from \"../../data/axios\"\nimport { Add, KeyboardArrowDown, PlayArrow, ThumbDownAltOutlined, ThumbUpAltOutlined } from '@mui/icons-material'\n\n\nconst RowItem = ({ movie, isLargeRow }) => {\n\n    const [rating, setRating] = useState('')\n    const [genres, setGenres] = useState([])\n    const [seasons, setSeasons] = useState('')\n    const [duration, setDuration] = useState('')\n\n    // Movies have titles, Series have names\n    const [isMovie, setIsMovie] = useState(movie.title ? true : false)\n\n    useEffect(() => {\n\n        const fetchRatings = async () => {\n            let req\n\n            !isMovie\n                ? req = await axios.get(`/tv/${movie.id}/content_ratings?api_key=33df560deb68ba199cabea7a3b00b7a5`)\n                : req = await axios.get(`/movie/${movie.id}/release_dates?api_key=33df560deb68ba199cabea7a3b00b7a5 `)\n\n            !isMovie\n                ? setRating(req.data.results[0].rating || \"Not Rated\")\n                : setRating(req.data.results?.find(obj => {\n                    return obj.iso_3166_1 === 'US'\n                })?.release_dates[0].certification || \"Not Rated\")\n\n            // return rating\n\n        }\n        fetchRatings()\n\n        const fetchData = async () => {\n            let req\n            let genresArray = []\n\n            !isMovie\n                ? req = await axios.get(`/tv/${movie.id}?api_key=33df560deb68ba199cabea7a3b00b7a5&language=en-US`)\n                : req = await axios.get(`/movie/${movie.id}?api_key=33df560deb68ba199cabea7a3b00b7a5&language=en-US`)\n\n            req.data?.genres.forEach(reqGenre => { genresArray.push(reqGenre.name) })\n\n            setGenres(genresArray || \"\")\n            setSeasons(req.data.number_of_seasons)\n\n        }\n\n        fetchData()\n    }, [movie.id, isMovie, movie.name])\n\n    // The returned endpoint for images doesn't include this part which is necessary to grab the images.\n    const base_image_url = \"https://image.tmdb.org/t/p/original\"\n\n    return (\n        <div className=\"row-item\">\n\n            <div className=\"image-container\">\n                <img\n                    className={`row-item-poster`}\n                    src={base_image_url + `${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\n                    alt={movie.name}\n                />\n                <h3 className=\"image-title\">{movie.title || movie.name}</h3>\n\n            </div>\n\n\n\n\n\n            <div className=\"item-info\">\n                <div className=\"icons-container\">\n                    <div className=\"icons-left\">\n                        <PlayArrow className=\"item-icon\" sx={{ fontSize: 40 }} />\n                        <Add className=\"item-icon\" sx={{ fontSize: 40 }} />\n                        <ThumbUpAltOutlined className=\"item-icon\" sx={{ fontSize: 40 }} />\n                        <ThumbDownAltOutlined className=\"item-icon\" sx={{ fontSize: 40 }} />\n                    </div>\n\n                    <div className=\"icons-right\">\n                        <KeyboardArrowDown className=\"item-icon\" sx={{ fontSize: 40 }} />\n                    </div>\n\n                </div>\n\n                <div className=\"item-info-details\">\n                    <span className=\"item-average\">Rating: {movie.vote_average} / 10</span>\n                    <span className=\"rating\">{rating}</span>\n                    {!isMovie && <span className=\"seasons\">{seasons === 1 ? \"1 Season\" : seasons + \" Seasons\" || \"\"} </span>}\n                    <span className=\"resolution\">HD</span>\n                </div>\n\n                <div className=\"genres\">\n                    {genres.map(genre => (\n                        <span className=\"genre\">{genre}</span>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RowItem\n","import { useRef, useState, useEffect } from \"react\"\nimport axios from \"../../data/axios\"  // This is using axios.create we've created instead of axios from nodemodules. (This includes the baseURL when making requests)\nimport { ArrowBackIosOutlined, ArrowForwardIosOutlined } from \"@mui/icons-material\"\nimport RowItem from \"../rowItem/RowItem\"\n\nconst Row = ({ title, fetchURL, isLargeRow }) => {\n\n    // Movies pulled from API for each row\n    const [movies, setMovies] = useState([]);\n\n    // This useState is mainly to check if we're at the first or last item in the container.\n    const [slideNumber, setSlideNumber] = useState(0)\n\n    // Check to see if one animation is finished before another begins.\n    const [animationFinished, setAnimationFinished] = useState(true)\n\n    const rowRef = useRef()\n\n    //Important for animation logic: Container contains 10 list items. 2 of which are off screen.\n    const handleClick = (direction) => {\n        setAnimationFinished(false)\n\n        // The Element.getBoundingClientRect() method returns a DOMRect object providing information\n        //   about the size of an element and its position relative to the viewport.\n\n        // Storing the x axis position of the container element and subtracting the width (50px) of the arrows (in pixels)\n        let distance = rowRef.current.getBoundingClientRect().x - 50\n        // console.log(rowRef.current.getBoundingClientRect().width)\n\n        // If we're at the beginning of the list don't allow for the slider to move.\n        if (direction === \"left\" && slideNumber > 0 && animationFinished) {\n            setSlideNumber(slideNumber - 1)\n            rowRef.current.style.transform = `translateX(${336.2 + distance}px)`  //336.2px = 21.0125em (listItem's width + margin-right = 21.0125em)\n        }\n\n        // If we're at the ending of the list don't allow for the slider to move.\n        // slideNumber > 2 accounts for there only being 8 visible and 2 left off screen\n        if (direction === \"right\" && slideNumber < (movies.length - 6) && animationFinished) {\n            setSlideNumber(slideNumber + 1)\n            rowRef.current.style.transform = `translateX(${-336.2 + distance}px)`  //336.2px = 21.0125em (listItem's width + margin-right = 21.0125em)  \n\n        }\n        // console.log(distance)\n\n        // Created a timeout to prevent 1 animation happening in the middle of a nother.\n        // For Example: animation 1 is 50% of the way done, another one begins at this exact time. That causes problems with positioning.\n        setTimeout(() => {\n            setAnimationFinished(true)\n        }, 1650);\n\n    }\n\n\n    // Pulling in data using fetchURL inside of useEffect\n    useEffect(() => {\n        const fetchData = async () => {\n            const req = await axios.get(fetchURL);  // fetchURL is pulled in as a prop from app.js. App.js is using api endpoints stored in requests.js\n            setMovies(req.data.results)\n            // console.log(movies)\n            return req\n        }\n\n        // console.log(movies)\n        fetchData()\n    }, [fetchURL, movies])\n\n\n    return (\n        <div className=\"row\">\n\n            <h2 className=\"row-title\">{title}</h2>\n\n            <div className=\"wrapper\">\n\n                <ArrowBackIosOutlined\n                    className=\"slider-arrow slider-left\"\n                    onClick={() => handleClick(\"left\")}\n                    style={{ display: slideNumber === 0 && \"none\" }}\n                />\n\n                <div className=\"container\" ref={rowRef}>\n\n\n                    {movies.map((movie) => (\n\n\n                        <RowItem movie={movie} isLargeRow={isLargeRow} key={movie.id} fetchURL={fetchURL} />\n\n                    ))}\n\n\n                </div>\n\n                <ArrowForwardIosOutlined\n                    className=\"slider-arrow slider-right\"\n                    onClick={() => handleClick(\"right\")}\n                    style={{ display: slideNumber > (movies.length - 6) && \"none\" }}\n                />\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Row\n","// Object of API ENDPOINTS\nimport requests from \"../../data/requests\"\nimport React from 'react'\nimport Featured from '../../components/featured/Featured'\nimport Navbar from '../../components/navbar/Navbar'\nimport Row from \"../../components/row/Row\"\n\nconst Home = () => {\n    return (\n        <div className=\"home\">\n            <Navbar />\n\n            <Featured />\n            <Row title=\"Trending Now\" fetchURL={requests.fetchTrending} />\n            <Row title=\"Top Rated\" fetchURL={requests.fetchTopRated} />\n            <Row title=\"Action Movies\" fetchURL={requests.fetchActionMovies} />\n            <Row title=\"Comedy Movies\" fetchURL={requests.fetchComedyMovies} />\n            <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies} />\n            <Row title=\"NETFLIX ORIGINALS\" fetchURL={requests.fetchNetflixOriginals} />\n            <Row title=\"Romance Movies\" fetchURL={requests.fetchRomanceMovies} />\n            <Row title=\"Documentaries\" fetchURL={requests.fetchDocumentaries} />\n        </div>\n    )\n}\n\nexport default Home\n","import Home from \"./pages/home/Home\";\nimport \"./app.scss\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}