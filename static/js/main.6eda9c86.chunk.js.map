{"version":3,"sources":["data/requests.js","data/axios.js","components/featured/Featured.js","components/navbar/Navbar.js","components/rowItem/RowItem.js","components/row/Row.js","pages/home/Home.js","App.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Featured","useState","movie","setMovie","isLoading","setIsLoading","useEffect","fetchData","a","get","req","data","results","Math","floor","random","length","setTimeout","shortOverview","overview","substring","className","src","backdrop_path","alt","name","title","original_name","PlayArrow","sx","fontSize","InfoOutlined","Navbar","isScrolled","setIsScrolled","window","onscroll","pageYOffset","Search","Notifications","ArrowDropDown","RowItem","isLargeRow","index","rating","setRating","genres","setGenres","seasons","setSeasons","trailer","setTrailer","isMovie","isHovered","setIsHovered","fetchRatings","id","find","obj","iso_3166_1","release_dates","certification","genresArray","forEach","reqGenre","push","videoKey","videos","key","number_of_seasons","onMouseEnter","onMouseLeave","style","left","frameBorder","allow","poster_path","display","Add","ThumbUpAltOutlined","ThumbDownAltOutlined","KeyboardArrowDown","vote_average","map","genre","indexOf","width","Row","fetchURL","movies","setMovies","slideNumber","setSlideNumber","rowRef","useRef","handleClick","direction","distance","current","getBoundingClientRect","x","transform","ArrowBackIosOutlined","onClick","ref","ArrowForwardIosOutlined","Home","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eda9c86.chunk.js","sourcesContent":["const API_KEY = \"33df560deb68ba199cabea7a3b00b7a5\";\n\nconst requests = {\n\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US&region=US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n\n\n\n}\n\nexport default requests;","import axios from \"axios\";\n\n// Base URL\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\"\n})\n\nexport default instance;","import { useEffect, useState } from 'react'\nimport axios from '../../data/axios'\nimport requests from '../../data/requests'\nimport { InfoOutlined, PlayArrow } from '@mui/icons-material'\n\n\nconst Featured = () => {\n\n    const [movie, setMovie] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    useEffect(() => {\n\n        const fetchData = async () => {\n            const req = await axios.get(requests.fetchNetflixOriginals)\n            // console.log(req.data.results[Math.floor(Math.random() * req.data.results.length) - 1])\n\n            // This returns 1 random movie from the array of objects and sets it as the state of movie\n            setMovie(req.data.results[Math.floor(Math.random() * req.data.results.length) - 1])\n            return req\n        }\n\n        fetchData()\n\n        setTimeout(() => {\n            setIsLoading(false)\n\n        }, 1750);\n    }, [])\n\n    const shortOverview = movie?.overview ? movie.overview.substring(0, 150) + \"...\" : '';\n\n    return (\n        <>\n\n            <header className=\"featured-loading\"></header>\n\n            <header className=\"featured\">\n\n                <div className=\"featured-fade-bottom\"></div>\n\n                {isLoading\n\n                    ? <div className=\"img-loading\"></div>\n\n                    : <img\n                        className=\"featured-img\"\n                        src={`https://image.tmdb.org/t/p/original/${movie?.backdrop_path}`}\n                        alt={movie?.name || movie?.title || movie?.original_name}\n                    />\n\n                }\n\n                <div className=\"featured-info\">\n\n                    <h1 className=\"featured-title\">\n                        {/* Set Movie title but account for possible naming inconsistincies in API */}\n                        {movie?.title || movie?.name || movie?.original_name || \"......\"}\n                    </h1>\n\n                    <h2 className=\"featured-desc\">\n\n                        {shortOverview || \"...\"}\n\n                    </h2>\n\n                    <div className=\"featured-buttons\">\n\n                        <button className=\"play\">\n\n                            <PlayArrow className=\"icons\" sx={{ fontSize: 40 }} />\n                            <span>Play</span>\n\n                        </button>\n\n                        <button className=\"more-info\">\n\n                            <InfoOutlined className=\"icons\" sx={{ fontSize: 40 }} />\n                            <span>More Info</span>\n\n                        </button>\n\n                    </div>\n\n\n                </div>\n\n\n            </header>\n\n\n\n        </>\n    )\n\n}\n\nexport default Featured\n","import { ArrowDropDown, Notifications, Search } from '@mui/icons-material'\nimport React, { useState } from 'react'\n\nconst Navbar = () => {\n\n    // Check if the page has been scrolled\n    const [isScrolled, setIsScrolled] = useState(false);\n\n    // When page has been scrolled setIsScrolled to true\n    window.onscroll = () => {\n        setIsScrolled(window.pageYOffset === 0 ? false : true)\n        return () => (window.onscroll = null);\n    }\n\n\n    return (\n        // If isScrolled state is true then add scrolled class. If not then just use default navbar class/css\n        <nav className={isScrolled ? \"navbar scrolled\" : \"navbar\"}>\n\n            <div className=\"nav-container\">\n\n                <div className=\"nav-left\">\n\n                    <img\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/2560px-Netflix_2015_logo.svg.png\"\n                        alt=\"\"\n                    />\n\n                    <span>Home</span>\n                    <span>TV Shows</span>\n                    <span>Movies</span>\n                    <span>New & Popular</span>\n                    <span>My List</span>\n\n                </div>\n\n                <div className=\"nav-right\">\n\n                    <Search className=\"nav-icon\" />\n\n                    <span>DVD</span>\n\n                    <Notifications className=\"nav-icon\" />\n\n                    <img src=\"https://images.pexels.com/photos/6899260/pexels-photo-6899260.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\" alt=\"\" />\n\n                    <div className=\"profile\">\n\n                        <ArrowDropDown className=\"nav-icon\" />\n                        <div className=\"options\">\n                            <span>Settings</span>\n                            <span>Logout</span>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n\n        </nav>\n    )\n}\n\nexport default Navbar\n","import { useEffect, useState } from 'react'\nimport axios from \"../../data/axios\"\nimport { Add, KeyboardArrowDown, PlayArrow, ThumbDownAltOutlined, ThumbUpAltOutlined } from '@mui/icons-material'\n\n\nconst RowItem = ({ movie, isLargeRow, index }) => {\n    //API GATHERED INFO\n    const [rating, setRating] = useState('loading...')\n    const [genres, setGenres] = useState([\"loading...\"])\n    const [seasons, setSeasons] = useState('loading..')\n    const [trailer, setTrailer] = useState('loading..')\n    // const [duration, setDuration] = useState('')\n\n    // FUNCTIONALITY USESTATES\n    const [isMovie] = useState(movie.title ? true : false)   // Movies have titles, Series have names\n    const [isHovered, setIsHovered] = useState(false)\n    const [isLoading, setIsLoading] = useState(true)\n\n\n    useEffect(() => {\n\n        const fetchRatings = async () => {\n            let req\n\n            !isMovie\n                ? req = await axios.get(`/tv/${movie.id}/content_ratings?api_key=33df560deb68ba199cabea7a3b00b7a5`)\n                : req = await axios.get(`/movie/${movie.id}/release_dates?api_key=33df560deb68ba199cabea7a3b00b7a5 `)\n\n            !isMovie\n                ? setRating(req.data.results[0].rating || \"Not Rated\")\n                : setRating(req.data.results?.find(obj => {\n                    return obj.iso_3166_1 === 'US'\n                })?.release_dates[0].certification || \"Not Rated\")\n\n        }\n\n        const fetchData = async () => {\n            let req\n            let genresArray = []\n\n            !isMovie\n                ? req = await axios.get(`/tv/${movie.id}?api_key=33df560deb68ba199cabea7a3b00b7a5&language=en-US&append_to_response=videos`)\n                : req = await axios.get(`/movie/${movie.id}?api_key=33df560deb68ba199cabea7a3b00b7a5&language=en-US&append_to_response=videos`)\n\n            req.data?.genres.forEach(reqGenre => { genresArray.push(reqGenre.name) })\n\n            // grab videos from response\n            let videoKey = req.data.videos.results[0]?.key\n\n            setGenres(genresArray || \"\")\n            setSeasons(req.data.number_of_seasons)\n            setTrailer(`https://www.youtube-nocookie.com/embed/${videoKey}?controls=0&autoplay=1&modestbranding=1&loop=1&playlist=${videoKey}&showinfo=0`)\n        }\n        fetchRatings()\n        fetchData()\n\n        setTimeout(() => {\n            setIsLoading(false)\n\n        }, 2000);\n\n    }, [movie.id, isMovie, movie.name])\n\n    // The returned endpoint for images doesn't include this part which is necessary to grab the images.\n    const base_image_url = \"https://image.tmdb.org/t/p/original\"\n\n\n\n    return (\n        <>\n            {isHovered && <div className=\"spacer-left\"></div>}\n\n            {isLoading\n                ? <div className=\"item-loading\"></div>\n\n                : <div className={`row-item`}\n                    onMouseEnter={() => setIsHovered(true)}\n                    onMouseLeave={() => setIsHovered(false)}\n                    style={{ left: isHovered && index * 296 - 25 }} // Put it in correct positioning when hovered.\n                >\n\n\n\n                    {isHovered\n                        ? <iframe src={trailer} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" ></iframe>\n                        : <div className=\"image-container\">\n\n                            <img\n                                className={`row-item-poster`}\n                                src={base_image_url + `${isLargeRow ? movie?.poster_path : movie?.backdrop_path}`}\n                                alt={movie.name}\n                            />\n\n\n                            <h3 className=\"image-title\">{movie?.title || movie?.name}</h3>\n\n                        </div>\n                    }\n\n\n\n\n                    <div className=\"item-info\"\n\n                        style={{ display: !isHovered && \"none\" }}>\n                        <div className=\"icons-container\">\n                            <div className=\"icons-left\">\n                                <PlayArrow className=\"item-icon\" sx={{ fontSize: 40 }} />\n                                <Add className=\"item-icon\" sx={{ fontSize: 40 }} />\n                                <ThumbUpAltOutlined className=\"item-icon\" sx={{ fontSize: 40 }} />\n                                <ThumbDownAltOutlined className=\"item-icon\" sx={{ fontSize: 40 }} />\n                            </div>\n\n                            <div className=\"icons-right\">\n                                <KeyboardArrowDown className=\"item-icon\" sx={{ fontSize: 40 }} />\n                            </div>\n\n                        </div>\n\n                        <div className=\"item-info-details\">\n                            <span className=\"item-average\">Rating: {movie.vote_average} / 10</span>\n                            <span className=\"rating\">{rating}</span>\n                            {!isMovie && <span className=\"seasons\">{seasons === 1 ? \"1 Season\" : seasons + \" Seasons\" || \"\"} </span>}\n                            <span className=\"resolution\">HD</span>\n                        </div>\n\n                        <div className=\"genres\">\n                            {genres.map(genre => (\n                                <span key={genres.indexOf(genre)} className=\"genre\">{genre}</span>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n\n            }\n\n            {isHovered && <div className=\"spacer-right\" style={{ width: `${index * 0.1 + 16}rem` }}></div>}\n        </>\n    )\n}\n\nexport default RowItem\n","import { useRef, useState, useEffect } from \"react\"\nimport axios from \"../../data/axios\"  // This is using axios.create we've created instead of axios from nodemodules. (This includes the baseURL when making requests)\nimport { ArrowBackIosOutlined, ArrowForwardIosOutlined } from \"@mui/icons-material\"\nimport RowItem from \"../rowItem/RowItem\"\n\nconst Row = ({ title, fetchURL, isLargeRow }) => {\n\n    // Movies pulled from API for each row\n    const [movies, setMovies] = useState([]);\n\n    // Theck if we're at the first or last item in the container.\n    const [slideNumber, setSlideNumber] = useState(0)\n\n    const rowRef = useRef()\n\n    const handleClick = (direction) => {\n\n        // The Element.getBoundingClientRect() method returns a DOMRect object providing information about the size of an element and its position relative to the viewport.\n\n        // Storing the x axis position of the container element and subtracting the width (50px) of the arrows (in pixels)\n        let distance = rowRef.current.getBoundingClientRect().x - 50\n        // console.log(rowRef.current.getBoundingClientRect().width)\n\n        //CONTROLS ACTUAL MOVEMENT\n        if (direction === \"left\" && slideNumber > 0) {\n            setSlideNumber(slideNumber - 1)\n            rowRef.current.style.transform = `translateX(${301 + distance}px)`  //301px  = 18.8125em (listItem's width + margin-right = 18.8125em)\n        }\n\n        if (direction === \"right\" && slideNumber < (movies.length - 6)) {\n            setSlideNumber(slideNumber + 1)\n            rowRef.current.style.transform = `translateX(${-301 + distance}px)`  //301px  = 18.8125em (listItem's width + margin-right = 18.8125em)\n        }\n    }\n\n\n    // Pulling in data using fetchURL inside of useEffect\n    useEffect(() => {\n        const fetchData = async () => {\n            const req = await axios.get(fetchURL);  // fetchURL is pulled in as a prop from app.js. App.js is using api endpoints stored in requests.js\n            setMovies(req.data.results)\n            // console.log(movies)\n            return req\n        }\n\n        fetchData()\n    }, [fetchURL, movies])\n\n    return (\n        <section className=\"row\">\n\n            <h2 className=\"row-title\">{title}</h2>\n\n            <div className=\"wrapper\">\n\n                <ArrowBackIosOutlined\n                    className=\"slider-arrow slider-left\"\n                    onClick={() => handleClick(\"left\")}\n                    style={{ display: slideNumber === 0 && \"none\" }}\n                />\n\n                <div className=\"container\" ref={rowRef}>\n\n                    {movies.map((movie) => (\n\n                        <RowItem key={movie.id} movie={movie} isLargeRow={isLargeRow} fetchURL={fetchURL} index={movies.indexOf(movie)} />\n\n                    ))}\n\n\n                </div>\n\n                <ArrowForwardIosOutlined\n                    className=\"slider-arrow slider-right\"\n                    onClick={() => handleClick(\"right\")}\n                    style={{ display: slideNumber >= (movies.length - 6) && \"none\" }}\n                />\n\n            </div>\n\n        </section>\n    )\n}\n\nexport default Row\n","// Object of API ENDPOINTS\nimport requests from \"../../data/requests\"\nimport React from 'react'\nimport Featured from '../../components/featured/Featured'\nimport Navbar from '../../components/navbar/Navbar'\nimport Row from \"../../components/row/Row\"\n\nconst Home = () => {\n    return (\n        <div className=\"home\">\n            <Navbar />\n\n            <Featured />\n            <Row title=\"Trending Now\" fetchURL={requests.fetchTrending} />\n            <Row title=\"Top Rated\" fetchURL={requests.fetchTopRated} />\n            <Row title=\"Action Movies\" fetchURL={requests.fetchActionMovies} />\n            <Row title=\"Comedy Movies\" fetchURL={requests.fetchComedyMovies} />\n            <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies} />\n            <Row title=\"NETFLIX ORIGINALS\" fetchURL={requests.fetchNetflixOriginals} />\n            <Row title=\"Romance Movies\" fetchURL={requests.fetchRomanceMovies} />\n            <Row title=\"Documentaries\" fetchURL={requests.fetchDocumentaries} />\n        </div>\n    )\n}\n\nexport default Home\n","import Home from \"./pages/home/Home\";\nimport \"./app.scss\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}